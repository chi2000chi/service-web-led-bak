package com.framework.webClient.controller;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;import java.util.HashMap;import java.util.List;import java.util.Map;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.RestController;import org.springframework.web.servlet.ModelAndView;import com.framework.webClient.service.ILedLedManageService;/** *  * 文件名  LedStateMonitorController * 描述  电子站牌状态监控（地图） * @auther 吉庆 * 创建日期  2018年10月29日 */@RestControllerpublic class LedStateMonitorController {	@Autowired(required = true)	private ILedLedManageService ledLedManageService;	/**	 * 	 * 初始化	 * 	 * @return	 */	@RequestMapping("/ledstatemonitor")	public ModelAndView ledstatemonitor() {		ModelAndView mv = new ModelAndView("ledStateMonitor");		return mv;	}	/**	 * 	 * 查询电子站牌状态监控，包括统计，站牌点，站牌点击详情。 	 * 计算公式： 	 * 电子站牌总数 = 在线（正常） + 在线（异常） + 离线（正常） + 离线（异常）；	 * 在线电子站牌数 = 在线（正常） + 在线（异常） + 离线（异常）； 	 * 在线故障数 = 在线（异常）；	 * 	 * @param paramMap	 * @return	 */	@PostMapping(value = "/selectLedStateMonitor")	public Map<String, Object> selectLedStateMonitor(@RequestParam Map<String, Object> paramMap) {		// 存放返回页面数据		Map<String, Object> resultMap = new HashMap<String, Object>();		// 在线正常电子站牌数		int ledZxzcNum = 0;		// 在线异常电子站牌数		int ledZxycNum = 0;		// 离线正常电子站牌数		int ledLxzcNum = 0;		// 离线异常电子站牌数		int ledLxycNum = 0;		// 经纬度集合		List<Map<String, Object>> jwdList = new ArrayList<>();		Date d = new Date();          SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");          String dateNowStr = sdf.format(d);  		try {			// 当天的时间			resultMap.put("dateNowStr", dateNowStr);			List<Map<String, Object>> ledList = ledLedManageService.selectLedList(paramMap);			resultMap.put("key", ledList);			// 遍历电子站牌，整合页面所需数据格式 1、获取比例数据，2、整合			for (Map<String, Object> temp : ledList) {				String zxzt = String.valueOf(temp.get("zxzt"));				String sbzt = String.valueOf(temp.get("sbzt"));				// 创建坐标点集合				Map<String, Object> jwdMap = new HashMap<>();				// 根据状态判断相关数量 color：1(在线：绿色)，color：0(离线：黑色)，color：2(故障：红色)				if (zxzt.equals("在线") && sbzt.equals("正常")) {					ledZxzcNum = ledZxzcNum + 1;					jwdMap.put("color", "1");				}				if (zxzt.equals("在线") && sbzt.equals("异常")) {					jwdMap.put("color", "2");					ledZxycNum = ledZxycNum + 1;				}				if (zxzt.equals("离线") && sbzt.equals("正常")) {					jwdMap.put("color", "0");					ledLxzcNum = ledLxzcNum + 1;				}				if (zxzt.equals("离线") && sbzt.equals("异常")) {					jwdMap.put("color", "2");					ledLxycNum = ledLxycNum + 1;				}				jwdMap.put("jd", temp.get("jd"));				jwdMap.put("wd", temp.get("wd"));				jwdList.add(jwdMap);							}			// 电子站牌总数			resultMap.put("ledAllNum", ledList.size());			// 电子站牌在线正常状态总数			resultMap.put("ledZxzcNum", ledZxzcNum);			// 电子站牌在线异常状态总数			resultMap.put("ledZxycNum", ledZxycNum);			// 电子站牌离线正常状态总数			resultMap.put("ledLxzcNum", ledLxzcNum);			// 电子站牌离线异常状态总数			resultMap.put("ledLxycNum", ledLxycNum);			// 经纬度数据集合			resultMap.put("jwd", jwdList);		} catch (Exception e) {			e.printStackTrace();		}		return resultMap;	}}