<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" ><mapper namespace="com.framework.webClient.dao.Common808Dao">	<resultMap id="StationMap" type="com.framework.jt808.vo.StationInfo">		<result column="xlid" property="xlid" />		<result column="xlmc" property="xlmc" />		<result column="zdxh" property="zdxh" />		<result column="fx" property="fx" />		<result column="zdmc" property="zdmc" />		<result column="jxiazjl" property="jxiazjl" />		<result column="jshangzjl" property="jshangzjl" />		<result column="jshouzl" property="jshouzl" />		<result column="jd" property="jd" />		<result column="wd" property="wd" />	</resultMap>	<resultMap id="ledLineMap" type="com.framework.jt808.vo.resp.LedLine">		<result column="ledid" property="ledid" />		<result column="zdtk" property="zdtk" />			<result column="ID" property="ID" />		<result column="Name" property="Name" />		<result column="SName" property="SName" />		<result column="RunDirection" property="RunDirection" />		<result column="BeginTime" property="BeginTime" />		<result column="EndTime" property="EndTime" />		<result column="Interval" property="Interval" />		<result column="Price" property="Price" />		<result column="StationSN" property="StationSN" />		<result column="StationDirection" property="StationDirection" />		<result column="xlmc" property="xlmc" />			</resultMap>		<resultMap id="resourseMap" type="com.framework.jt808.vo.resp.LedResourcesItem">		<result column="Name" property="Name" />		<result column="Url" property="Url" />		</resultMap>		<resultMap id="ledLineStationMap" type="com.framework.jt808.vo.resp.LedLineStation">		<result column="yxfx" property="yxfx" />		<result column="lineNo" property="lineNo" />		<result column="ledid" property="ledid" />		<result column="Id" property="Id" />		<result column="Name" property="Name" />		<result column="PriceArea" property="PriceArea" />	</resultMap>		<!-- 查询电子站牌及线路信息 -->	<select id="selectLedAndLineInfoTmp" parameterType="map" resultType="map">			SELECT    ledLed.LEDID AS "ledid",    ledLed.LEDMC AS "ledmc",    ledLed.LEDBH AS "ledbh",    ledTemp.MBLJ AS "mblj",    ABS(MOD(DBMS_RANDOM.RANDOM,10000)) AS "mbbh",		ledTemp.ggmc AS "ggmc"    FROM    LED_TEMPLATE_RELATION_TEMP ledTempRel    left JOIN LED_LED ledLed ON ledled.LEDID = ledTempRel.LEDID    left JOIN LED_TEMPLATE_TEMP ledTemp ON    ledTempRel.MBID = ledTemp.MBID		<where>			ledLed.QYZT = 1			<if test=" ledNo != null and  ledNo != '' ">				AND ledLed.LEDBH = #{ledNo}			</if>		</where>	</select>		<!-- 查询电子站牌及线路信息 -->	<select id="selectLedAndLineInfo" parameterType="map" resultType="map">SELECT    ledLed.Ledfx as "xlfx",    ledStation.Zdtk as "zdtk",		xl.FQDZZDMC as "fqzd",    ledLed.LEDID AS "ledid",    ledLed.LEDMC AS "ledmc",    ledLed.LEDBH AS "ledbh",    ledTemp.MBLJ AS "mblj",    ledTemp.MBBH AS "mbbh",    ledStation.XLMC AS "xlmc",	ledlinename.XLMC_FRIST_NAME AS "fristname",	ledlinename.XLMC_SECOND_NAME AS "secondname",    ledStation.XLBH AS "xlbh",    ledStation.FX AS "fx",    ledStation.ZDMC AS "zdmc",    ledStation.ZDBH AS "zdbh",    ledStation.DQZX AS "dqzx",    ledStation.ZPXSSX AS "zpxssx",    xl.pfjg AS "fcjg",    xl.QCJG AS "pj",    replace(NVL(DECODE (ledStation.FX, 0,ZDSB, QDSB ),'00:00'),':','') AS "starttime",    replace(NVL(DECODE (ledStation.FX, 0,ZDMB ,QDMB ),'00:00'),':','') AS "endtime"    FROM    LED_LED ledLed    left JOIN LED_TEMPLATE_RELATION ledTempRel ON    ledled.LEDID = ledTempRel.LEDID    left JOIN LED_TEMPLATE ledTemp ON    ledTempRel.MBID = ledTemp.MBID    left JOIN LED_STATION ledStation ON    ledLed.LEDID = ledStation.LEDID  AND ledStation.QYZT = 1    left JOIN JC_XL xl ON xl.CKXLID = ledStation.XLBH	left JOIN LED_LINENAME ledlinename ON ledlinename.XLBH = ledStation.XLBH		<where>			ledLed.QYZT = 1			and ledStation.XLMC in ('106','59')			<if test=" ledNo != null and  ledNo != '' ">				AND ledLed.LEDBH = #{ledNo}			</if>		</where>		order by ledStation.ZPXSSX ASC	</select>	<!-- 查询线路站点列表 -->	<select id="selectStaionListAll" resultMap="StationMap">		select		zd.XLID as "xlid",		zd.XLMC as "xlmc",		zd.ZDXH as "zdxh",		zd.ZDMC as "zdmc",		zd.YXFX as "fx",		zd.JXIAZJL as "jxiazjl",		zd.JSHANGZJL as "jshangzjl",		zd.JSHOUZJL as "jshouzl",		zd.XGSJ as "xgsj",		zd.JD as "jd",		zd.WD as "wd"		from jc_zd zd	</select>	<select id="getLastGetStationDateTime" resultType="String">		SELECT		TO_CHAR (MAX(zd.XGSJ),'YYYY-MM-DD HH24:MI:SS') AS "lastGetStationDateTime"		FROM		jc_zd zd	</select>		<insert id="insertUploadPara"  parameterType="map" >		MERGE INTO LED_UPLOAD_PARA t1 USING (	SELECT		RAWTOHEX (SYS_GUID()) AS CSID,		led.ledid AS LEDID,		#{TCPYCFWQIPDZ} AS TCPYCFWQIPDZ,#{YCTCPFWDK} AS YCTCPFWDK,TO_DATE(#{SBYXKSRQ}, 'yyyy-MM-dd') AS SBYXKSRQ,TO_DATE(#{SBYXJZRQ}, 'yyyy-MM-dd') AS SBYXJZRQ,#{XHSJDKSSJ} AS XHSJDKSSJ,#{XHSJDJZSJ} AS XHSJDJZSJ,#{SBWDFWKS} AS SBWDFWKS,#{SBWDFWJZ} AS SBWDFWJZ,#{WBFSKS} AS WBFSKS,#{WBFSJZ} AS WBFSJZ,#{HLFSKS} AS HLFSKS,#{HLFSJZ} AS HLFSJZ,#{JWMKKS} AS JWMKKS,#{JWMKJZ} AS JWMKJZ,#{KZMS} AS KZMS,#{DWFW} AS DWFW,#{SBGLBHKS} AS SBGLBHKS,#{SBGLBHJZ} AS SBGLBHJZ,#{SBSJBH} AS SBSJBH,#{SBFWZQ} AS SBFWZQ,#{BDSBIPDZ} AS BDSBIPDZ,#{WG} AS WG,	#{ZWYM} AS ZWYM	FROM		LED_LED led	WHERE		ledbh = #{LEDID}) T2 ON (T1.LEDID = T2.LEDID)WHEN MATCHED THEN	UPDATESET t1.TCPYCFWQIPDZ = t2.TCPYCFWQIPDZ, t1.YCTCPFWDK = t2.YCTCPFWDK, t1.SBYXKSRQ = t2.SBYXKSRQ, t1.SBYXJZRQ = t2.SBYXJZRQ, t1.XHSJDKSSJ = t2.XHSJDKSSJ, t1.XHSJDJZSJ = t2.XHSJDJZSJ, t1.SBWDFWKS = t2.SBWDFWKS, t1.SBWDFWJZ = t2.SBWDFWJZ, t1.WBFSKS = t2.WBFSKS, t1.WBFSJZ = t2.WBFSJZ, t1.HLFSKS = t2.HLFSKS, t1.HLFSJZ = t2.HLFSJZ, t1.JWMKKS = t2.JWMKKS, t1.JWMKJZ = t2.JWMKJZ, t1.KZMS = t2.KZMS, t1.DWFW = t2.DWFW, t1.SBGLBHKS = t2.SBGLBHKS, t1.SBGLBHJZ = t2.SBGLBHJZ, t1.SBSJBH = t2.SBSJBH, t1.SBFWZQ = t2.SBFWZQ, t1.BDSBIPDZ = t2.BDSBIPDZ, t1.WG = t2.WG, t1.ZWYM = t2.ZWYMWHEN NOT MATCHED THEN	INSERT (		t1.CSID,		t1.LEDID,		t1.TCPYCFWQIPDZ,		t1.YCTCPFWDK,		t1.SBYXKSRQ,		t1.SBYXJZRQ,		t1.XHSJDKSSJ,		t1.XHSJDJZSJ,		t1.SBWDFWKS,		t1.SBWDFWJZ,		t1.WBFSKS,		t1.WBFSJZ,		t1.HLFSKS,		t1.HLFSJZ,		t1.JWMKKS,		t1.JWMKJZ,		t1.KZMS,		t1.DWFW,		t1.SBGLBHKS,		t1.SBGLBHJZ,		t1.SBSJBH,		t1.SBFWZQ,		t1.BDSBIPDZ,		t1.WG,		t1.ZWYM	)VALUES	(		t2.CSID,		t2.LEDID,		t2.TCPYCFWQIPDZ,		t2.YCTCPFWDK,		t2.SBYXKSRQ,		t2.SBYXJZRQ,		t2.XHSJDKSSJ,		t2.XHSJDJZSJ,		t2.SBWDFWKS,		t2.SBWDFWJZ,		t2.WBFSKS,		t2.WBFSJZ,		t2.HLFSKS,		t2.HLFSJZ,		t2.JWMKKS,		t2.JWMKJZ,		t2.KZMS,		t2.DWFW,		t2.SBGLBHKS,		t2.SBGLBHJZ,		t2.SBSJBH,		t2.SBFWZQ,		t2.BDSBIPDZ,		t2.WG,		t2.ZWYM	)		</insert>		<insert id="insertLedState"  parameterType="map" >	INSERT INTO  /*+ append nologging */ ${TABLENAME} (	ZTID,	CPUWD,	BZWD,	YJWDCJZ,	LEDWDCJZ,	ZDCGQCJZ,	MJCGQ,	SWCGQ,	JWMKZT,	YJKQZT,	LEDKQZT,	FSKQZT,	ZMKQZT,	DVRKQZT,	GLYQKQZT,	LEDBH,	JSSJ) VALUES(RAWTOHEX (SYS_GUID()),#{CPUWD},#{BZWD},#{YJWDCJZ},#{LEDWDCJZ},#{ZDCGQCJZ},#{MJCGQ},#{SWCGQ},#{JWMKZT},#{YJKQZT},#{LEDKQZT},#{FSKQZT},#{ZMKQZT},#{DVRKQZT},#{GLYQKQZT},#{LEDBH},SYSDATE)	</insert>			<select id="getLedParaByLedNo" parameterType="string" resultType="map">SELECT	led.BDSBIPDZ AS "010A",	led.WG AS "0108",	led.ZWYM AS "010B",	para.TCPYCFWQIPDZ AS "0101",	para.YCTCPFWDK AS "0103",	TO_CHAR(para.SBYXKSRQ,'yyyyMMdd') || TO_CHAR(para.SBYXJZRQ,'yyyyMMdd') AS "0207",	replace(para.XHSJDKSSJ,':','') || replace(para.XHSJDJZSJ,':','') AS "0208",	para.SBWDFWKS ||','|| para.SBWDFWJZ AS "0209",	para.WBFSKS ||','|| para.WBFSJZ AS "020A",	para.HLFSKS ||','|| para.HLFSJZ AS "020B",	para.JWMKKS||','||para.JWMKJZ AS "020C",	para.KZMS AS "020D",	para.DWFW AS "020E",	para.SBGLBHKS||','|| para.SBGLBHJZ AS "020F",	para.SBSJBH AS "0210",	para.SBFWZQ AS "0211"FROM	LED_PARA para,	LED_LED ledWHERE	led.LEDID = PARA.LEDIDAND led.LEDBH = #{ledNo}	</select>			<select id="getUnShowLine" resultType="String">		select PARA_VALUE FROM LED_SYSTEM_PARA WHERE PARA_NO ='un_show_line'	</select>		<select id="getDistance" resultType="String">		select PARA_VALUE FROM LED_SYSTEM_PARA WHERE PARA_NO ='distance'	</select>		<select id="getValidDistance" resultType="String">		select PARA_VALUE FROM LED_SYSTEM_PARA WHERE PARA_NO ='valid_distance'	</select>		<insert id="updateCommonMsgBack"  parameterType="map" >		INSERT INTO /*+ append nologging*/ ${TABLENAME} (	ID,	LEDBH,	FLOWID,	MSGID,	RESULT,	JSSJ) VALUES(RAWTOHEX (SYS_GUID()),#{LEDBH,jdbcType=VARCHAR},#{FLOWID,jdbcType=VARCHAR},#{MSGID,jdbcType=VARCHAR},#{RESULT,jdbcType=VARCHAR},SYSDATE)	</insert>			<insert id="insertCommonMsgBack"  parameterType="map" >	INSERT INTO  /*+ append nologging */ ${TABLENAME} (	ID,	FLOWID,	MSGID,	MSGINFO,	LEDBH,	FSSJ,	MSGDETAIL) VALUES(RAWTOHEX (SYS_GUID()),#{FlOWID},#{MSGID},#{MSGINFO},#{LEDBH},SYSDATE,#{MSGDETAIL,jdbcType=VARCHAR})	</insert>	<insert id="insertLedMsgLogFromTemp"  parameterType="map" >		BEGIN  		INSERT INTO /*+ append nologging */ ${TABLENAME} SELECT * FROM LED_MSGLOG_TEMP; 		DELETE FROM  LED_MSGLOG_TEMP;	END;	</insert>			<insert id="insertCommonMsgBackDetail"  parameterType="map" >		INSERT INTO /*+ append nologging */ ${TABLENAME} (	ID,	LEDBH,	FLOWID,	MSGID,	RESULT,	JSSJ,	ERRORINFO) VALUES(RAWTOHEX (SYS_GUID()),#{LEDBH,jdbcType=VARCHAR},#{FLOWID,jdbcType=VARCHAR},#{MSGID,jdbcType=VARCHAR},#{RESULT,jdbcType=VARCHAR},SYSDATE,#{ERRORMSG,jdbcType=VARCHAR})	</insert>		<insert id="insertMsg0906"  parameterType="com.framework.jt808.vo.resp.MsgBody0906" >	INSERT INTO LED_MSG0906 (	ID,	LEDNO,	LINENAME,	FX,	STATIONNO,	ARRIVEBUSNO1,	ARRIVEBUSSTATE1,	ARRIVEYJD1,	ARRIVESTATIONCOUNT1,	ARRIVEBUSNO2,	ARRIVEBUSSTATE2,	ARRIVEYJD2,	ARRIVESTATIONCOUNT2,	ARRIVEBUSNO3,	ARRIVEBUSSTATE3,	ARRIVEYJD3,	ARRIVESTATIONCOUNT3,	ARRIVEDISTANCE1,	ARRIVETIME1,	ARRIVEDISTANCE2,	ARRIVETIME2,	ARRIVEDISTANCE3,	ARRIVETIME3,	INSERTDATE,	BUSTATE,	FLOWID,	GPSTIME) VALUES(RAWTOHEX (SYS_GUID()),#{ledNo},#{lineName},#{fx},#{stationNo},#{arriveBusNo1},#{arriveBusState1},#{arriveYJD1},#{arriveStationCount1},#{arriveBusNo2},#{arriveBusState2},#{arriveYJD2},#{arriveStationCount2},#{arriveBusNo3},#{arriveBusState3},#{arriveYJD3},#{arriveStationCount3},#{arriveDistance1},#{arriveTime1},#{arriveDistance2},#{arriveTime2},#{arriveDistance3},#{arriveTime3},SYSDATE,#{busState},#{flowid},#{gpstime,jdbcType=VARCHAR})	</insert>							<insert id="insertDzLog"  parameterType="com.framework.entity.output.DZOutputEntity" >	INSERT INTO LED_DZLOG (	ID,	LINENAME,	BUSNAME,	BUSNUMBER,	DIRECTION,	DZDATE,	DZTIME,	STATIONNO,	JSSJ) VALUES(RAWTOHEX (SYS_GUID()),#{linename,jdbcType=VARCHAR},#{busname,jdbcType=VARCHAR},#{busnumber,jdbcType=VARCHAR},#{direction,jdbcType=VARCHAR},#{date,jdbcType=VARCHAR},#{time,jdbcType=VARCHAR},#{stationno,jdbcType=VARCHAR},SYSDATE)	</insert>						<insert id="insertLzLog"  parameterType="com.framework.entity.output.LZOutPutEntity" >	INSERT INTO LED_LZLOG (	ID,	LINENAME,	BUSNAME,	BUSNUMBER,	DIRECTION,	LEAVEDATE,	LEAVETIME,	STATIONNO,	ONNUM,	OFFNUM,	TOTALNUM,	JSSJ) VALUES(RAWTOHEX (SYS_GUID()),#{linename,jdbcType=VARCHAR},#{busname,jdbcType=VARCHAR},#{busnumber,jdbcType=VARCHAR},#{direction,jdbcType=VARCHAR},#{leavedate,jdbcType=VARCHAR},#{leavetime,jdbcType=VARCHAR},#{stationno,jdbcType=VARCHAR},#{onnum,jdbcType=VARCHAR},#{offnum,jdbcType=VARCHAR},#{total,jdbcType=VARCHAR},SYSDATE)	</insert>						<insert id="insertGPSLog"  parameterType="com.framework.entity.output.PlaceOutputEntity" >	INSERT INTO LED_GPSLOG (	ID,	LINENAME,	BUSNAME,	BUSNUMBER,	GPSDATE,	GPSTIME,	LATITUDE,	LONGITUDE,	SPEED,	ANGLE,	HEIGHT,	STATIONNO,	STATIONDISTANCE,	NEXTSTATIONNO,	NEXTSTATIONDISTANCE,	DISTANCE,	DDATE,	DTIME,	DIRECTION,	BANNUMBER,	CHANGELINE,	DRIVERNO,	DRIVERNAME,	DRIVERNUMBER,	BUSSTATUS,	JSSJ) VALUES(RAWTOHEX (SYS_GUID()),#{linename,jdbcType=VARCHAR},#{busname,jdbcType=VARCHAR},#{busnumber,jdbcType=VARCHAR},#{gpsdate,jdbcType=VARCHAR},#{gpstime,jdbcType=VARCHAR},#{latitude,jdbcType=VARCHAR},#{longitude,jdbcType=VARCHAR},#{speed,jdbcType=VARCHAR},#{angle,jdbcType=VARCHAR},#{height,jdbcType=VARCHAR},#{stationno,jdbcType=VARCHAR},#{stationdistance,jdbcType=VARCHAR},#{nextstationno,jdbcType=VARCHAR},#{nextstationdistance,jdbcType=VARCHAR},#{distance,jdbcType=VARCHAR},#{ddate,jdbcType=VARCHAR},#{dtime,jdbcType=VARCHAR},#{direction,jdbcType=VARCHAR},#{bannumber,jdbcType=VARCHAR},#{changeline,jdbcType=VARCHAR},#{driverno,jdbcType=VARCHAR},#{drivername,jdbcType=VARCHAR},#{drivernumber,jdbcType=VARCHAR},#{busstatus,jdbcType=VARCHAR},SYSDATE)	</insert>			<insert id="insertLedRegister"  parameterType="map">	INSERT INTO ${TABLENAME} (	ID,	LEDBH,	JSSJ,	REGISTERINFO) VALUES(RAWTOHEX (SYS_GUID()),#{ledNo,jdbcType=VARCHAR},SYSDATE,#{REGISTERINFO,jdbcType=VARCHAR})</insert>					<select id="getLedLineList" resultMap="ledLineMap"  parameterType="java.lang.String">SELECT ledLed.LEDID AS "ledid",       ledStation.Zdtk as "zdtk",       ledStation.XLBH AS "ID",       ledlinename.XLMC_FRIST_NAME AS "Name",       ledlinename.XLMC_SECOND_NAME AS "SName",       ledStation.FX AS "RunDirection",       NVL(DECODE(ledStation.FX, 0, QDSB, ZDSB), '00:00') AS "BeginTime",       NVL(DECODE(ledStation.FX, 0, QDMB, ZDMB), '00:00') AS "EndTime",       NVL(xl.pfjg,2) AS "Price",       NVL( xl.QCJG,10) AS "Interval",       ledStation.DQZX AS "StationSN",       ledLed.Ledfx as "StationDirection",       xl.XLMC as "xlmc"  FROM LED_STATION ledStation  left JOIN LED_LED ledLed ON ledLed.LEDID = ledStation.LEDID  left JOIN JC_XL xl ON xl.CKXLID = ledStation.XLBH  left JOIN LED_LINENAME ledlinename    ON ledlinename.XLBH = ledStation.XLBH where ledLed.QYZT = 1   AND ledLed.LEDBH = #{ledNo,jdbcType=VARCHAR} order by ledStation.ZPXSSX ASC	</select>				<select id="getLedLineStationList" resultMap="ledLineStationMap"  parameterType="java.lang.String">select zd.YXFX as "yxfx",       zd.XLID as "lineNo",       ledline.LEDID as "ledid",       zd.ZDXH as "Id",       zd.ZDMC as "Name",       '0' as "PriceArea"  from jc_zd zd,       (SELECT ledStation.LEDID,               ledStation.XLBH  AS "XLID",               ledStation.FX    AS "YXFX"               FROM LED_STATION ledStation          left JOIN LED_LED ledLed            ON ledLed.LEDID = ledStation.LEDID         where ledLed.QYZT = 1           AND ledLed.LEDBH = #{ledNo,jdbcType=VARCHAR}) ledline where zd.XLID = ledline.XLID   and zd.YXFX = ledline.yxfx	</select>		<select id="selectSafeCodeList"  resultType="map">		SELECT t.LEDBH as "ledbh" ,t.SAFECODE AS "safecode" from LED_SAFECODE t	</select>					<select id="getLedResourcesByLedNo" resultMap="resourseMap"  parameterType="java.lang.String">		select a.RESOURCE_NAME AS "Name",a.RESOURCE_URL AS "Url" from LED_RESOURSE  a WHERE a.LEDBH= #{ledNo,jdbcType=VARCHAR}	</select></mapper>