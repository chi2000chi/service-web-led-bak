/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.framework.webClient.dispatch.up.bean;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2019-04-24")
public class CLDLSJDTO implements org.apache.thrift.TBase<CLDLSJDTO, CLDLSJDTO._Fields>, java.io.Serializable, Cloneable, Comparable<CLDLSJDTO> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CLDLSJDTO");

  private static final org.apache.thrift.protocol.TField ACTION_CMDTYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("actionCMDType", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField XLID_FIELD_DESC = new org.apache.thrift.protocol.TField("xlid", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField XLBH_FIELD_DESC = new org.apache.thrift.protocol.TField("xlbh", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField XLMC_FIELD_DESC = new org.apache.thrift.protocol.TField("xlmc", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CLID_FIELD_DESC = new org.apache.thrift.protocol.TField("clid", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField EMP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("empId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SBSXZCH_FIELD_DESC = new org.apache.thrift.protocol.TField("sbsxzch", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField DLSJ_FIELD_DESC = new org.apache.thrift.protocol.TField("dlsj", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField JD_FIELD_DESC = new org.apache.thrift.protocol.TField("jd", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField WD_FIELD_DESC = new org.apache.thrift.protocol.TField("wd", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField SSSD_FIELD_DESC = new org.apache.thrift.protocol.TField("sssd", org.apache.thrift.protocol.TType.BYTE, (short)11);
  private static final org.apache.thrift.protocol.TField FXJ_FIELD_DESC = new org.apache.thrift.protocol.TField("fxj", org.apache.thrift.protocol.TType.I16, (short)12);
  private static final org.apache.thrift.protocol.TField YYZT_FIELD_DESC = new org.apache.thrift.protocol.TField("yyzt", org.apache.thrift.protocol.TType.BYTE, (short)13);
  private static final org.apache.thrift.protocol.TField DKLJYY_FIELD_DESC = new org.apache.thrift.protocol.TField("dkljyy", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DKSJ_FIELD_DESC = new org.apache.thrift.protocol.TField("dksj", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField YXLBH_FIELD_DESC = new org.apache.thrift.protocol.TField("yxlbh", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField IP_FIELD_DESC = new org.apache.thrift.protocol.TField("ip", org.apache.thrift.protocol.TType.STRING, (short)17);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CLDLSJDTOStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CLDLSJDTOTupleSchemeFactory();

  /**
   * 
   * @see ActionCMDType
   */
  public ActionCMDType actionCMDType; // required
  public java.lang.String xlid; // required
  public java.lang.String xlbh; // required
  public java.lang.String xlmc; // required
  public java.lang.String clid; // required
  public java.lang.String empId; // required
  public java.lang.String sbsxzch; // required
  public int dlsj; // required
  public int jd; // required
  public int wd; // required
  public byte sssd; // required
  public short fxj; // required
  public byte yyzt; // required
  public java.lang.String dkljyy; // required
  public int dksj; // required
  public java.lang.String yxlbh; // required
  public java.lang.String ip; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see ActionCMDType
     */
    ACTION_CMDTYPE((short)1, "actionCMDType"),
    XLID((short)2, "xlid"),
    XLBH((short)3, "xlbh"),
    XLMC((short)4, "xlmc"),
    CLID((short)5, "clid"),
    EMP_ID((short)6, "empId"),
    SBSXZCH((short)7, "sbsxzch"),
    DLSJ((short)8, "dlsj"),
    JD((short)9, "jd"),
    WD((short)10, "wd"),
    SSSD((short)11, "sssd"),
    FXJ((short)12, "fxj"),
    YYZT((short)13, "yyzt"),
    DKLJYY((short)14, "dkljyy"),
    DKSJ((short)15, "dksj"),
    YXLBH((short)16, "yxlbh"),
    IP((short)17, "ip");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACTION_CMDTYPE
          return ACTION_CMDTYPE;
        case 2: // XLID
          return XLID;
        case 3: // XLBH
          return XLBH;
        case 4: // XLMC
          return XLMC;
        case 5: // CLID
          return CLID;
        case 6: // EMP_ID
          return EMP_ID;
        case 7: // SBSXZCH
          return SBSXZCH;
        case 8: // DLSJ
          return DLSJ;
        case 9: // JD
          return JD;
        case 10: // WD
          return WD;
        case 11: // SSSD
          return SSSD;
        case 12: // FXJ
          return FXJ;
        case 13: // YYZT
          return YYZT;
        case 14: // DKLJYY
          return DKLJYY;
        case 15: // DKSJ
          return DKSJ;
        case 16: // YXLBH
          return YXLBH;
        case 17: // IP
          return IP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DLSJ_ISSET_ID = 0;
  private static final int __JD_ISSET_ID = 1;
  private static final int __WD_ISSET_ID = 2;
  private static final int __SSSD_ISSET_ID = 3;
  private static final int __FXJ_ISSET_ID = 4;
  private static final int __YYZT_ISSET_ID = 5;
  private static final int __DKSJ_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACTION_CMDTYPE, new org.apache.thrift.meta_data.FieldMetaData("actionCMDType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ActionCMDType.class)));
    tmpMap.put(_Fields.XLID, new org.apache.thrift.meta_data.FieldMetaData("xlid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.XLBH, new org.apache.thrift.meta_data.FieldMetaData("xlbh", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.XLMC, new org.apache.thrift.meta_data.FieldMetaData("xlmc", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLID, new org.apache.thrift.meta_data.FieldMetaData("clid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMP_ID, new org.apache.thrift.meta_data.FieldMetaData("empId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SBSXZCH, new org.apache.thrift.meta_data.FieldMetaData("sbsxzch", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DLSJ, new org.apache.thrift.meta_data.FieldMetaData("dlsj", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.JD, new org.apache.thrift.meta_data.FieldMetaData("jd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WD, new org.apache.thrift.meta_data.FieldMetaData("wd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SSSD, new org.apache.thrift.meta_data.FieldMetaData("sssd", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.FXJ, new org.apache.thrift.meta_data.FieldMetaData("fxj", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I16)));
    tmpMap.put(_Fields.YYZT, new org.apache.thrift.meta_data.FieldMetaData("yyzt", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BYTE)));
    tmpMap.put(_Fields.DKLJYY, new org.apache.thrift.meta_data.FieldMetaData("dkljyy", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DKSJ, new org.apache.thrift.meta_data.FieldMetaData("dksj", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.YXLBH, new org.apache.thrift.meta_data.FieldMetaData("yxlbh", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IP, new org.apache.thrift.meta_data.FieldMetaData("ip", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CLDLSJDTO.class, metaDataMap);
  }

  public CLDLSJDTO() {
  }

  public CLDLSJDTO(
    ActionCMDType actionCMDType,
    java.lang.String xlid,
    java.lang.String xlbh,
    java.lang.String xlmc,
    java.lang.String clid,
    java.lang.String empId,
    java.lang.String sbsxzch,
    int dlsj,
    int jd,
    int wd,
    byte sssd,
    short fxj,
    byte yyzt,
    java.lang.String dkljyy,
    int dksj,
    java.lang.String yxlbh,
    java.lang.String ip)
  {
    this();
    this.actionCMDType = actionCMDType;
    this.xlid = xlid;
    this.xlbh = xlbh;
    this.xlmc = xlmc;
    this.clid = clid;
    this.empId = empId;
    this.sbsxzch = sbsxzch;
    this.dlsj = dlsj;
    setDlsjIsSet(true);
    this.jd = jd;
    setJdIsSet(true);
    this.wd = wd;
    setWdIsSet(true);
    this.sssd = sssd;
    setSssdIsSet(true);
    this.fxj = fxj;
    setFxjIsSet(true);
    this.yyzt = yyzt;
    setYyztIsSet(true);
    this.dkljyy = dkljyy;
    this.dksj = dksj;
    setDksjIsSet(true);
    this.yxlbh = yxlbh;
    this.ip = ip;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CLDLSJDTO(CLDLSJDTO other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetActionCMDType()) {
      this.actionCMDType = other.actionCMDType;
    }
    if (other.isSetXlid()) {
      this.xlid = other.xlid;
    }
    if (other.isSetXlbh()) {
      this.xlbh = other.xlbh;
    }
    if (other.isSetXlmc()) {
      this.xlmc = other.xlmc;
    }
    if (other.isSetClid()) {
      this.clid = other.clid;
    }
    if (other.isSetEmpId()) {
      this.empId = other.empId;
    }
    if (other.isSetSbsxzch()) {
      this.sbsxzch = other.sbsxzch;
    }
    this.dlsj = other.dlsj;
    this.jd = other.jd;
    this.wd = other.wd;
    this.sssd = other.sssd;
    this.fxj = other.fxj;
    this.yyzt = other.yyzt;
    if (other.isSetDkljyy()) {
      this.dkljyy = other.dkljyy;
    }
    this.dksj = other.dksj;
    if (other.isSetYxlbh()) {
      this.yxlbh = other.yxlbh;
    }
    if (other.isSetIp()) {
      this.ip = other.ip;
    }
  }

  public CLDLSJDTO deepCopy() {
    return new CLDLSJDTO(this);
  }

  @Override
  public void clear() {
    this.actionCMDType = null;
    this.xlid = null;
    this.xlbh = null;
    this.xlmc = null;
    this.clid = null;
    this.empId = null;
    this.sbsxzch = null;
    setDlsjIsSet(false);
    this.dlsj = 0;
    setJdIsSet(false);
    this.jd = 0;
    setWdIsSet(false);
    this.wd = 0;
    setSssdIsSet(false);
    this.sssd = 0;
    setFxjIsSet(false);
    this.fxj = 0;
    setYyztIsSet(false);
    this.yyzt = 0;
    this.dkljyy = null;
    setDksjIsSet(false);
    this.dksj = 0;
    this.yxlbh = null;
    this.ip = null;
  }

  /**
   * 
   * @see ActionCMDType
   */
  public ActionCMDType getActionCMDType() {
    return this.actionCMDType;
  }

  /**
   * 
   * @see ActionCMDType
   */
  public CLDLSJDTO setActionCMDType(ActionCMDType actionCMDType) {
    this.actionCMDType = actionCMDType;
    return this;
  }

  public void unsetActionCMDType() {
    this.actionCMDType = null;
  }

  /** Returns true if field actionCMDType is set (has been assigned a value) and false otherwise */
  public boolean isSetActionCMDType() {
    return this.actionCMDType != null;
  }

  public void setActionCMDTypeIsSet(boolean value) {
    if (!value) {
      this.actionCMDType = null;
    }
  }

  public java.lang.String getXlid() {
    return this.xlid;
  }

  public CLDLSJDTO setXlid(java.lang.String xlid) {
    this.xlid = xlid;
    return this;
  }

  public void unsetXlid() {
    this.xlid = null;
  }

  /** Returns true if field xlid is set (has been assigned a value) and false otherwise */
  public boolean isSetXlid() {
    return this.xlid != null;
  }

  public void setXlidIsSet(boolean value) {
    if (!value) {
      this.xlid = null;
    }
  }

  public java.lang.String getXlbh() {
    return this.xlbh;
  }

  public CLDLSJDTO setXlbh(java.lang.String xlbh) {
    this.xlbh = xlbh;
    return this;
  }

  public void unsetXlbh() {
    this.xlbh = null;
  }

  /** Returns true if field xlbh is set (has been assigned a value) and false otherwise */
  public boolean isSetXlbh() {
    return this.xlbh != null;
  }

  public void setXlbhIsSet(boolean value) {
    if (!value) {
      this.xlbh = null;
    }
  }

  public java.lang.String getXlmc() {
    return this.xlmc;
  }

  public CLDLSJDTO setXlmc(java.lang.String xlmc) {
    this.xlmc = xlmc;
    return this;
  }

  public void unsetXlmc() {
    this.xlmc = null;
  }

  /** Returns true if field xlmc is set (has been assigned a value) and false otherwise */
  public boolean isSetXlmc() {
    return this.xlmc != null;
  }

  public void setXlmcIsSet(boolean value) {
    if (!value) {
      this.xlmc = null;
    }
  }

  public java.lang.String getClid() {
    return this.clid;
  }

  public CLDLSJDTO setClid(java.lang.String clid) {
    this.clid = clid;
    return this;
  }

  public void unsetClid() {
    this.clid = null;
  }

  /** Returns true if field clid is set (has been assigned a value) and false otherwise */
  public boolean isSetClid() {
    return this.clid != null;
  }

  public void setClidIsSet(boolean value) {
    if (!value) {
      this.clid = null;
    }
  }

  public java.lang.String getEmpId() {
    return this.empId;
  }

  public CLDLSJDTO setEmpId(java.lang.String empId) {
    this.empId = empId;
    return this;
  }

  public void unsetEmpId() {
    this.empId = null;
  }

  /** Returns true if field empId is set (has been assigned a value) and false otherwise */
  public boolean isSetEmpId() {
    return this.empId != null;
  }

  public void setEmpIdIsSet(boolean value) {
    if (!value) {
      this.empId = null;
    }
  }

  public java.lang.String getSbsxzch() {
    return this.sbsxzch;
  }

  public CLDLSJDTO setSbsxzch(java.lang.String sbsxzch) {
    this.sbsxzch = sbsxzch;
    return this;
  }

  public void unsetSbsxzch() {
    this.sbsxzch = null;
  }

  /** Returns true if field sbsxzch is set (has been assigned a value) and false otherwise */
  public boolean isSetSbsxzch() {
    return this.sbsxzch != null;
  }

  public void setSbsxzchIsSet(boolean value) {
    if (!value) {
      this.sbsxzch = null;
    }
  }

  public int getDlsj() {
    return this.dlsj;
  }

  public CLDLSJDTO setDlsj(int dlsj) {
    this.dlsj = dlsj;
    setDlsjIsSet(true);
    return this;
  }

  public void unsetDlsj() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DLSJ_ISSET_ID);
  }

  /** Returns true if field dlsj is set (has been assigned a value) and false otherwise */
  public boolean isSetDlsj() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DLSJ_ISSET_ID);
  }

  public void setDlsjIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DLSJ_ISSET_ID, value);
  }

  public int getJd() {
    return this.jd;
  }

  public CLDLSJDTO setJd(int jd) {
    this.jd = jd;
    setJdIsSet(true);
    return this;
  }

  public void unsetJd() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __JD_ISSET_ID);
  }

  /** Returns true if field jd is set (has been assigned a value) and false otherwise */
  public boolean isSetJd() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __JD_ISSET_ID);
  }

  public void setJdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __JD_ISSET_ID, value);
  }

  public int getWd() {
    return this.wd;
  }

  public CLDLSJDTO setWd(int wd) {
    this.wd = wd;
    setWdIsSet(true);
    return this;
  }

  public void unsetWd() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __WD_ISSET_ID);
  }

  /** Returns true if field wd is set (has been assigned a value) and false otherwise */
  public boolean isSetWd() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __WD_ISSET_ID);
  }

  public void setWdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __WD_ISSET_ID, value);
  }

  public byte getSssd() {
    return this.sssd;
  }

  public CLDLSJDTO setSssd(byte sssd) {
    this.sssd = sssd;
    setSssdIsSet(true);
    return this;
  }

  public void unsetSssd() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SSSD_ISSET_ID);
  }

  /** Returns true if field sssd is set (has been assigned a value) and false otherwise */
  public boolean isSetSssd() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SSSD_ISSET_ID);
  }

  public void setSssdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SSSD_ISSET_ID, value);
  }

  public short getFxj() {
    return this.fxj;
  }

  public CLDLSJDTO setFxj(short fxj) {
    this.fxj = fxj;
    setFxjIsSet(true);
    return this;
  }

  public void unsetFxj() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FXJ_ISSET_ID);
  }

  /** Returns true if field fxj is set (has been assigned a value) and false otherwise */
  public boolean isSetFxj() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FXJ_ISSET_ID);
  }

  public void setFxjIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FXJ_ISSET_ID, value);
  }

  public byte getYyzt() {
    return this.yyzt;
  }

  public CLDLSJDTO setYyzt(byte yyzt) {
    this.yyzt = yyzt;
    setYyztIsSet(true);
    return this;
  }

  public void unsetYyzt() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __YYZT_ISSET_ID);
  }

  /** Returns true if field yyzt is set (has been assigned a value) and false otherwise */
  public boolean isSetYyzt() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __YYZT_ISSET_ID);
  }

  public void setYyztIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __YYZT_ISSET_ID, value);
  }

  public java.lang.String getDkljyy() {
    return this.dkljyy;
  }

  public CLDLSJDTO setDkljyy(java.lang.String dkljyy) {
    this.dkljyy = dkljyy;
    return this;
  }

  public void unsetDkljyy() {
    this.dkljyy = null;
  }

  /** Returns true if field dkljyy is set (has been assigned a value) and false otherwise */
  public boolean isSetDkljyy() {
    return this.dkljyy != null;
  }

  public void setDkljyyIsSet(boolean value) {
    if (!value) {
      this.dkljyy = null;
    }
  }

  public int getDksj() {
    return this.dksj;
  }

  public CLDLSJDTO setDksj(int dksj) {
    this.dksj = dksj;
    setDksjIsSet(true);
    return this;
  }

  public void unsetDksj() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DKSJ_ISSET_ID);
  }

  /** Returns true if field dksj is set (has been assigned a value) and false otherwise */
  public boolean isSetDksj() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DKSJ_ISSET_ID);
  }

  public void setDksjIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DKSJ_ISSET_ID, value);
  }

  public java.lang.String getYxlbh() {
    return this.yxlbh;
  }

  public CLDLSJDTO setYxlbh(java.lang.String yxlbh) {
    this.yxlbh = yxlbh;
    return this;
  }

  public void unsetYxlbh() {
    this.yxlbh = null;
  }

  /** Returns true if field yxlbh is set (has been assigned a value) and false otherwise */
  public boolean isSetYxlbh() {
    return this.yxlbh != null;
  }

  public void setYxlbhIsSet(boolean value) {
    if (!value) {
      this.yxlbh = null;
    }
  }

  public java.lang.String getIp() {
    return this.ip;
  }

  public CLDLSJDTO setIp(java.lang.String ip) {
    this.ip = ip;
    return this;
  }

  public void unsetIp() {
    this.ip = null;
  }

  /** Returns true if field ip is set (has been assigned a value) and false otherwise */
  public boolean isSetIp() {
    return this.ip != null;
  }

  public void setIpIsSet(boolean value) {
    if (!value) {
      this.ip = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ACTION_CMDTYPE:
      if (value == null) {
        unsetActionCMDType();
      } else {
        setActionCMDType((ActionCMDType)value);
      }
      break;

    case XLID:
      if (value == null) {
        unsetXlid();
      } else {
        setXlid((java.lang.String)value);
      }
      break;

    case XLBH:
      if (value == null) {
        unsetXlbh();
      } else {
        setXlbh((java.lang.String)value);
      }
      break;

    case XLMC:
      if (value == null) {
        unsetXlmc();
      } else {
        setXlmc((java.lang.String)value);
      }
      break;

    case CLID:
      if (value == null) {
        unsetClid();
      } else {
        setClid((java.lang.String)value);
      }
      break;

    case EMP_ID:
      if (value == null) {
        unsetEmpId();
      } else {
        setEmpId((java.lang.String)value);
      }
      break;

    case SBSXZCH:
      if (value == null) {
        unsetSbsxzch();
      } else {
        setSbsxzch((java.lang.String)value);
      }
      break;

    case DLSJ:
      if (value == null) {
        unsetDlsj();
      } else {
        setDlsj((java.lang.Integer)value);
      }
      break;

    case JD:
      if (value == null) {
        unsetJd();
      } else {
        setJd((java.lang.Integer)value);
      }
      break;

    case WD:
      if (value == null) {
        unsetWd();
      } else {
        setWd((java.lang.Integer)value);
      }
      break;

    case SSSD:
      if (value == null) {
        unsetSssd();
      } else {
        setSssd((java.lang.Byte)value);
      }
      break;

    case FXJ:
      if (value == null) {
        unsetFxj();
      } else {
        setFxj((java.lang.Short)value);
      }
      break;

    case YYZT:
      if (value == null) {
        unsetYyzt();
      } else {
        setYyzt((java.lang.Byte)value);
      }
      break;

    case DKLJYY:
      if (value == null) {
        unsetDkljyy();
      } else {
        setDkljyy((java.lang.String)value);
      }
      break;

    case DKSJ:
      if (value == null) {
        unsetDksj();
      } else {
        setDksj((java.lang.Integer)value);
      }
      break;

    case YXLBH:
      if (value == null) {
        unsetYxlbh();
      } else {
        setYxlbh((java.lang.String)value);
      }
      break;

    case IP:
      if (value == null) {
        unsetIp();
      } else {
        setIp((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ACTION_CMDTYPE:
      return getActionCMDType();

    case XLID:
      return getXlid();

    case XLBH:
      return getXlbh();

    case XLMC:
      return getXlmc();

    case CLID:
      return getClid();

    case EMP_ID:
      return getEmpId();

    case SBSXZCH:
      return getSbsxzch();

    case DLSJ:
      return getDlsj();

    case JD:
      return getJd();

    case WD:
      return getWd();

    case SSSD:
      return getSssd();

    case FXJ:
      return getFxj();

    case YYZT:
      return getYyzt();

    case DKLJYY:
      return getDkljyy();

    case DKSJ:
      return getDksj();

    case YXLBH:
      return getYxlbh();

    case IP:
      return getIp();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ACTION_CMDTYPE:
      return isSetActionCMDType();
    case XLID:
      return isSetXlid();
    case XLBH:
      return isSetXlbh();
    case XLMC:
      return isSetXlmc();
    case CLID:
      return isSetClid();
    case EMP_ID:
      return isSetEmpId();
    case SBSXZCH:
      return isSetSbsxzch();
    case DLSJ:
      return isSetDlsj();
    case JD:
      return isSetJd();
    case WD:
      return isSetWd();
    case SSSD:
      return isSetSssd();
    case FXJ:
      return isSetFxj();
    case YYZT:
      return isSetYyzt();
    case DKLJYY:
      return isSetDkljyy();
    case DKSJ:
      return isSetDksj();
    case YXLBH:
      return isSetYxlbh();
    case IP:
      return isSetIp();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof CLDLSJDTO)
      return this.equals((CLDLSJDTO)that);
    return false;
  }

  public boolean equals(CLDLSJDTO that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_actionCMDType = true && this.isSetActionCMDType();
    boolean that_present_actionCMDType = true && that.isSetActionCMDType();
    if (this_present_actionCMDType || that_present_actionCMDType) {
      if (!(this_present_actionCMDType && that_present_actionCMDType))
        return false;
      if (!this.actionCMDType.equals(that.actionCMDType))
        return false;
    }

    boolean this_present_xlid = true && this.isSetXlid();
    boolean that_present_xlid = true && that.isSetXlid();
    if (this_present_xlid || that_present_xlid) {
      if (!(this_present_xlid && that_present_xlid))
        return false;
      if (!this.xlid.equals(that.xlid))
        return false;
    }

    boolean this_present_xlbh = true && this.isSetXlbh();
    boolean that_present_xlbh = true && that.isSetXlbh();
    if (this_present_xlbh || that_present_xlbh) {
      if (!(this_present_xlbh && that_present_xlbh))
        return false;
      if (!this.xlbh.equals(that.xlbh))
        return false;
    }

    boolean this_present_xlmc = true && this.isSetXlmc();
    boolean that_present_xlmc = true && that.isSetXlmc();
    if (this_present_xlmc || that_present_xlmc) {
      if (!(this_present_xlmc && that_present_xlmc))
        return false;
      if (!this.xlmc.equals(that.xlmc))
        return false;
    }

    boolean this_present_clid = true && this.isSetClid();
    boolean that_present_clid = true && that.isSetClid();
    if (this_present_clid || that_present_clid) {
      if (!(this_present_clid && that_present_clid))
        return false;
      if (!this.clid.equals(that.clid))
        return false;
    }

    boolean this_present_empId = true && this.isSetEmpId();
    boolean that_present_empId = true && that.isSetEmpId();
    if (this_present_empId || that_present_empId) {
      if (!(this_present_empId && that_present_empId))
        return false;
      if (!this.empId.equals(that.empId))
        return false;
    }

    boolean this_present_sbsxzch = true && this.isSetSbsxzch();
    boolean that_present_sbsxzch = true && that.isSetSbsxzch();
    if (this_present_sbsxzch || that_present_sbsxzch) {
      if (!(this_present_sbsxzch && that_present_sbsxzch))
        return false;
      if (!this.sbsxzch.equals(that.sbsxzch))
        return false;
    }

    boolean this_present_dlsj = true;
    boolean that_present_dlsj = true;
    if (this_present_dlsj || that_present_dlsj) {
      if (!(this_present_dlsj && that_present_dlsj))
        return false;
      if (this.dlsj != that.dlsj)
        return false;
    }

    boolean this_present_jd = true;
    boolean that_present_jd = true;
    if (this_present_jd || that_present_jd) {
      if (!(this_present_jd && that_present_jd))
        return false;
      if (this.jd != that.jd)
        return false;
    }

    boolean this_present_wd = true;
    boolean that_present_wd = true;
    if (this_present_wd || that_present_wd) {
      if (!(this_present_wd && that_present_wd))
        return false;
      if (this.wd != that.wd)
        return false;
    }

    boolean this_present_sssd = true;
    boolean that_present_sssd = true;
    if (this_present_sssd || that_present_sssd) {
      if (!(this_present_sssd && that_present_sssd))
        return false;
      if (this.sssd != that.sssd)
        return false;
    }

    boolean this_present_fxj = true;
    boolean that_present_fxj = true;
    if (this_present_fxj || that_present_fxj) {
      if (!(this_present_fxj && that_present_fxj))
        return false;
      if (this.fxj != that.fxj)
        return false;
    }

    boolean this_present_yyzt = true;
    boolean that_present_yyzt = true;
    if (this_present_yyzt || that_present_yyzt) {
      if (!(this_present_yyzt && that_present_yyzt))
        return false;
      if (this.yyzt != that.yyzt)
        return false;
    }

    boolean this_present_dkljyy = true && this.isSetDkljyy();
    boolean that_present_dkljyy = true && that.isSetDkljyy();
    if (this_present_dkljyy || that_present_dkljyy) {
      if (!(this_present_dkljyy && that_present_dkljyy))
        return false;
      if (!this.dkljyy.equals(that.dkljyy))
        return false;
    }

    boolean this_present_dksj = true;
    boolean that_present_dksj = true;
    if (this_present_dksj || that_present_dksj) {
      if (!(this_present_dksj && that_present_dksj))
        return false;
      if (this.dksj != that.dksj)
        return false;
    }

    boolean this_present_yxlbh = true && this.isSetYxlbh();
    boolean that_present_yxlbh = true && that.isSetYxlbh();
    if (this_present_yxlbh || that_present_yxlbh) {
      if (!(this_present_yxlbh && that_present_yxlbh))
        return false;
      if (!this.yxlbh.equals(that.yxlbh))
        return false;
    }

    boolean this_present_ip = true && this.isSetIp();
    boolean that_present_ip = true && that.isSetIp();
    if (this_present_ip || that_present_ip) {
      if (!(this_present_ip && that_present_ip))
        return false;
      if (!this.ip.equals(that.ip))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetActionCMDType()) ? 131071 : 524287);
    if (isSetActionCMDType())
      hashCode = hashCode * 8191 + actionCMDType.getValue();

    hashCode = hashCode * 8191 + ((isSetXlid()) ? 131071 : 524287);
    if (isSetXlid())
      hashCode = hashCode * 8191 + xlid.hashCode();

    hashCode = hashCode * 8191 + ((isSetXlbh()) ? 131071 : 524287);
    if (isSetXlbh())
      hashCode = hashCode * 8191 + xlbh.hashCode();

    hashCode = hashCode * 8191 + ((isSetXlmc()) ? 131071 : 524287);
    if (isSetXlmc())
      hashCode = hashCode * 8191 + xlmc.hashCode();

    hashCode = hashCode * 8191 + ((isSetClid()) ? 131071 : 524287);
    if (isSetClid())
      hashCode = hashCode * 8191 + clid.hashCode();

    hashCode = hashCode * 8191 + ((isSetEmpId()) ? 131071 : 524287);
    if (isSetEmpId())
      hashCode = hashCode * 8191 + empId.hashCode();

    hashCode = hashCode * 8191 + ((isSetSbsxzch()) ? 131071 : 524287);
    if (isSetSbsxzch())
      hashCode = hashCode * 8191 + sbsxzch.hashCode();

    hashCode = hashCode * 8191 + dlsj;

    hashCode = hashCode * 8191 + jd;

    hashCode = hashCode * 8191 + wd;

    hashCode = hashCode * 8191 + (int) (sssd);

    hashCode = hashCode * 8191 + fxj;

    hashCode = hashCode * 8191 + (int) (yyzt);

    hashCode = hashCode * 8191 + ((isSetDkljyy()) ? 131071 : 524287);
    if (isSetDkljyy())
      hashCode = hashCode * 8191 + dkljyy.hashCode();

    hashCode = hashCode * 8191 + dksj;

    hashCode = hashCode * 8191 + ((isSetYxlbh()) ? 131071 : 524287);
    if (isSetYxlbh())
      hashCode = hashCode * 8191 + yxlbh.hashCode();

    hashCode = hashCode * 8191 + ((isSetIp()) ? 131071 : 524287);
    if (isSetIp())
      hashCode = hashCode * 8191 + ip.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(CLDLSJDTO other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetActionCMDType()).compareTo(other.isSetActionCMDType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetActionCMDType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actionCMDType, other.actionCMDType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetXlid()).compareTo(other.isSetXlid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetXlid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.xlid, other.xlid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetXlbh()).compareTo(other.isSetXlbh());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetXlbh()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.xlbh, other.xlbh);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetXlmc()).compareTo(other.isSetXlmc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetXlmc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.xlmc, other.xlmc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetClid()).compareTo(other.isSetClid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.clid, other.clid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEmpId()).compareTo(other.isSetEmpId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmpId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.empId, other.empId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSbsxzch()).compareTo(other.isSetSbsxzch());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSbsxzch()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sbsxzch, other.sbsxzch);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDlsj()).compareTo(other.isSetDlsj());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDlsj()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dlsj, other.dlsj);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJd()).compareTo(other.isSetJd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jd, other.jd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetWd()).compareTo(other.isSetWd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.wd, other.wd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSssd()).compareTo(other.isSetSssd());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSssd()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sssd, other.sssd);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFxj()).compareTo(other.isSetFxj());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFxj()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fxj, other.fxj);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetYyzt()).compareTo(other.isSetYyzt());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYyzt()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.yyzt, other.yyzt);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDkljyy()).compareTo(other.isSetDkljyy());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDkljyy()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dkljyy, other.dkljyy);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDksj()).compareTo(other.isSetDksj());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDksj()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dksj, other.dksj);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetYxlbh()).compareTo(other.isSetYxlbh());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetYxlbh()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.yxlbh, other.yxlbh);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIp()).compareTo(other.isSetIp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ip, other.ip);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("CLDLSJDTO(");
    boolean first = true;

    sb.append("actionCMDType:");
    if (this.actionCMDType == null) {
      sb.append("null");
    } else {
      sb.append(this.actionCMDType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("xlid:");
    if (this.xlid == null) {
      sb.append("null");
    } else {
      sb.append(this.xlid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("xlbh:");
    if (this.xlbh == null) {
      sb.append("null");
    } else {
      sb.append(this.xlbh);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("xlmc:");
    if (this.xlmc == null) {
      sb.append("null");
    } else {
      sb.append(this.xlmc);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("clid:");
    if (this.clid == null) {
      sb.append("null");
    } else {
      sb.append(this.clid);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("empId:");
    if (this.empId == null) {
      sb.append("null");
    } else {
      sb.append(this.empId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sbsxzch:");
    if (this.sbsxzch == null) {
      sb.append("null");
    } else {
      sb.append(this.sbsxzch);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dlsj:");
    sb.append(this.dlsj);
    first = false;
    if (!first) sb.append(", ");
    sb.append("jd:");
    sb.append(this.jd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("wd:");
    sb.append(this.wd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sssd:");
    sb.append(this.sssd);
    first = false;
    if (!first) sb.append(", ");
    sb.append("fxj:");
    sb.append(this.fxj);
    first = false;
    if (!first) sb.append(", ");
    sb.append("yyzt:");
    sb.append(this.yyzt);
    first = false;
    if (!first) sb.append(", ");
    sb.append("dkljyy:");
    if (this.dkljyy == null) {
      sb.append("null");
    } else {
      sb.append(this.dkljyy);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dksj:");
    sb.append(this.dksj);
    first = false;
    if (!first) sb.append(", ");
    sb.append("yxlbh:");
    if (this.yxlbh == null) {
      sb.append("null");
    } else {
      sb.append(this.yxlbh);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ip:");
    if (this.ip == null) {
      sb.append("null");
    } else {
      sb.append(this.ip);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CLDLSJDTOStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CLDLSJDTOStandardScheme getScheme() {
      return new CLDLSJDTOStandardScheme();
    }
  }

  private static class CLDLSJDTOStandardScheme extends org.apache.thrift.scheme.StandardScheme<CLDLSJDTO> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CLDLSJDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACTION_CMDTYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.actionCMDType = ActionCMDType.findByValue(iprot.readI32());
              struct.setActionCMDTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // XLID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.xlid = iprot.readString();
              struct.setXlidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // XLBH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.xlbh = iprot.readString();
              struct.setXlbhIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // XLMC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.xlmc = iprot.readString();
              struct.setXlmcIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CLID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.clid = iprot.readString();
              struct.setClidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EMP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.empId = iprot.readString();
              struct.setEmpIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SBSXZCH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sbsxzch = iprot.readString();
              struct.setSbsxzchIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DLSJ
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.dlsj = iprot.readI32();
              struct.setDlsjIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // JD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.jd = iprot.readI32();
              struct.setJdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // WD
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.wd = iprot.readI32();
              struct.setWdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // SSSD
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.sssd = iprot.readByte();
              struct.setSssdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // FXJ
            if (schemeField.type == org.apache.thrift.protocol.TType.I16) {
              struct.fxj = iprot.readI16();
              struct.setFxjIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // YYZT
            if (schemeField.type == org.apache.thrift.protocol.TType.BYTE) {
              struct.yyzt = iprot.readByte();
              struct.setYyztIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DKLJYY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.dkljyy = iprot.readString();
              struct.setDkljyyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DKSJ
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.dksj = iprot.readI32();
              struct.setDksjIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // YXLBH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.yxlbh = iprot.readString();
              struct.setYxlbhIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // IP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ip = iprot.readString();
              struct.setIpIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CLDLSJDTO struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.actionCMDType != null) {
        oprot.writeFieldBegin(ACTION_CMDTYPE_FIELD_DESC);
        oprot.writeI32(struct.actionCMDType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.xlid != null) {
        oprot.writeFieldBegin(XLID_FIELD_DESC);
        oprot.writeString(struct.xlid);
        oprot.writeFieldEnd();
      }
      if (struct.xlbh != null) {
        oprot.writeFieldBegin(XLBH_FIELD_DESC);
        oprot.writeString(struct.xlbh);
        oprot.writeFieldEnd();
      }
      if (struct.xlmc != null) {
        oprot.writeFieldBegin(XLMC_FIELD_DESC);
        oprot.writeString(struct.xlmc);
        oprot.writeFieldEnd();
      }
      if (struct.clid != null) {
        oprot.writeFieldBegin(CLID_FIELD_DESC);
        oprot.writeString(struct.clid);
        oprot.writeFieldEnd();
      }
      if (struct.empId != null) {
        oprot.writeFieldBegin(EMP_ID_FIELD_DESC);
        oprot.writeString(struct.empId);
        oprot.writeFieldEnd();
      }
      if (struct.sbsxzch != null) {
        oprot.writeFieldBegin(SBSXZCH_FIELD_DESC);
        oprot.writeString(struct.sbsxzch);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DLSJ_FIELD_DESC);
      oprot.writeI32(struct.dlsj);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JD_FIELD_DESC);
      oprot.writeI32(struct.jd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(WD_FIELD_DESC);
      oprot.writeI32(struct.wd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SSSD_FIELD_DESC);
      oprot.writeByte(struct.sssd);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FXJ_FIELD_DESC);
      oprot.writeI16(struct.fxj);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(YYZT_FIELD_DESC);
      oprot.writeByte(struct.yyzt);
      oprot.writeFieldEnd();
      if (struct.dkljyy != null) {
        oprot.writeFieldBegin(DKLJYY_FIELD_DESC);
        oprot.writeString(struct.dkljyy);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(DKSJ_FIELD_DESC);
      oprot.writeI32(struct.dksj);
      oprot.writeFieldEnd();
      if (struct.yxlbh != null) {
        oprot.writeFieldBegin(YXLBH_FIELD_DESC);
        oprot.writeString(struct.yxlbh);
        oprot.writeFieldEnd();
      }
      if (struct.ip != null) {
        oprot.writeFieldBegin(IP_FIELD_DESC);
        oprot.writeString(struct.ip);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CLDLSJDTOTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CLDLSJDTOTupleScheme getScheme() {
      return new CLDLSJDTOTupleScheme();
    }
  }

  private static class CLDLSJDTOTupleScheme extends org.apache.thrift.scheme.TupleScheme<CLDLSJDTO> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CLDLSJDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetActionCMDType()) {
        optionals.set(0);
      }
      if (struct.isSetXlid()) {
        optionals.set(1);
      }
      if (struct.isSetXlbh()) {
        optionals.set(2);
      }
      if (struct.isSetXlmc()) {
        optionals.set(3);
      }
      if (struct.isSetClid()) {
        optionals.set(4);
      }
      if (struct.isSetEmpId()) {
        optionals.set(5);
      }
      if (struct.isSetSbsxzch()) {
        optionals.set(6);
      }
      if (struct.isSetDlsj()) {
        optionals.set(7);
      }
      if (struct.isSetJd()) {
        optionals.set(8);
      }
      if (struct.isSetWd()) {
        optionals.set(9);
      }
      if (struct.isSetSssd()) {
        optionals.set(10);
      }
      if (struct.isSetFxj()) {
        optionals.set(11);
      }
      if (struct.isSetYyzt()) {
        optionals.set(12);
      }
      if (struct.isSetDkljyy()) {
        optionals.set(13);
      }
      if (struct.isSetDksj()) {
        optionals.set(14);
      }
      if (struct.isSetYxlbh()) {
        optionals.set(15);
      }
      if (struct.isSetIp()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetActionCMDType()) {
        oprot.writeI32(struct.actionCMDType.getValue());
      }
      if (struct.isSetXlid()) {
        oprot.writeString(struct.xlid);
      }
      if (struct.isSetXlbh()) {
        oprot.writeString(struct.xlbh);
      }
      if (struct.isSetXlmc()) {
        oprot.writeString(struct.xlmc);
      }
      if (struct.isSetClid()) {
        oprot.writeString(struct.clid);
      }
      if (struct.isSetEmpId()) {
        oprot.writeString(struct.empId);
      }
      if (struct.isSetSbsxzch()) {
        oprot.writeString(struct.sbsxzch);
      }
      if (struct.isSetDlsj()) {
        oprot.writeI32(struct.dlsj);
      }
      if (struct.isSetJd()) {
        oprot.writeI32(struct.jd);
      }
      if (struct.isSetWd()) {
        oprot.writeI32(struct.wd);
      }
      if (struct.isSetSssd()) {
        oprot.writeByte(struct.sssd);
      }
      if (struct.isSetFxj()) {
        oprot.writeI16(struct.fxj);
      }
      if (struct.isSetYyzt()) {
        oprot.writeByte(struct.yyzt);
      }
      if (struct.isSetDkljyy()) {
        oprot.writeString(struct.dkljyy);
      }
      if (struct.isSetDksj()) {
        oprot.writeI32(struct.dksj);
      }
      if (struct.isSetYxlbh()) {
        oprot.writeString(struct.yxlbh);
      }
      if (struct.isSetIp()) {
        oprot.writeString(struct.ip);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CLDLSJDTO struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.actionCMDType = ActionCMDType.findByValue(iprot.readI32());
        struct.setActionCMDTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.xlid = iprot.readString();
        struct.setXlidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.xlbh = iprot.readString();
        struct.setXlbhIsSet(true);
      }
      if (incoming.get(3)) {
        struct.xlmc = iprot.readString();
        struct.setXlmcIsSet(true);
      }
      if (incoming.get(4)) {
        struct.clid = iprot.readString();
        struct.setClidIsSet(true);
      }
      if (incoming.get(5)) {
        struct.empId = iprot.readString();
        struct.setEmpIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.sbsxzch = iprot.readString();
        struct.setSbsxzchIsSet(true);
      }
      if (incoming.get(7)) {
        struct.dlsj = iprot.readI32();
        struct.setDlsjIsSet(true);
      }
      if (incoming.get(8)) {
        struct.jd = iprot.readI32();
        struct.setJdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.wd = iprot.readI32();
        struct.setWdIsSet(true);
      }
      if (incoming.get(10)) {
        struct.sssd = iprot.readByte();
        struct.setSssdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.fxj = iprot.readI16();
        struct.setFxjIsSet(true);
      }
      if (incoming.get(12)) {
        struct.yyzt = iprot.readByte();
        struct.setYyztIsSet(true);
      }
      if (incoming.get(13)) {
        struct.dkljyy = iprot.readString();
        struct.setDkljyyIsSet(true);
      }
      if (incoming.get(14)) {
        struct.dksj = iprot.readI32();
        struct.setDksjIsSet(true);
      }
      if (incoming.get(15)) {
        struct.yxlbh = iprot.readString();
        struct.setYxlbhIsSet(true);
      }
      if (incoming.get(16)) {
        struct.ip = iprot.readString();
        struct.setIpIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

